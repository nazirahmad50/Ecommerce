@using Ecommerce.Web.Enums
@using Ecommerce.Web.ViewModels

@model Ecommerce.Web.ViewModels.ShopViewModel
@{
    ViewBag.Title = "Index";
}

<!-- Page title -->
<div class="page-title parallax parallax1">
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <div class="page-title-heading">
                    <h1 class="title">Shop</h1>
                </div><!-- /.page-title-heading -->

            </div><!-- /.col-md-12 -->
        </div><!-- /.row -->
    </div><!-- /.container -->
</div><!-- /.page-title -->


<section class="flat-row main-shop shop-slidebar">
    <div class="container">
        <div class="row">
            <div class="col-md-3">
                <div class="sidebar slidebar-shop">
                    <div class="widget widget-search">
                        <form role="search" method="get" class="search-form" action="@Url.Action("Index", "Shop")">
                            <label>
                                <input type="search" class="search-field" placeholder="Search …" value="@Model.searchTerm" name="searchTerm">
                            </label>
                            <input type="submit" class="search-submit" value="Search">
                        </form>
                    </div><!-- /.widget-search -->
                    <div class="widget widget-sort-by">
                        <h5 class="widget-title">
                            Sort By
                        </h5>
                        <ul>
                            <li><a  data-href="@Url.Action("FilterProducts", "Shop", new { sortBy = (int)SortByEnums.Default, categoryId = Model.categoryId })" class="dataLink @(Model.SortBy.HasValue ? Model.SortBy.Value == (int)SortByEnums.Default ? "active" : string.Empty : string.Empty) ">Default - Newest</a></li>
                            <li><a  data-href="@Url.Action("FilterProducts", "Shop", new { sortBy = (int)SortByEnums.Popularity, categoryId = Model.categoryId })" class="dataLink @(Model.SortBy.HasValue ? Model.SortBy.Value == (int)SortByEnums.Popularity ? "active" : string.Empty : string.Empty)">Popularity</a></li>
                            <li><a  data-href="@Url.Action("FilterProducts", "Shop", new { sortBy = (int)SortByEnums.PriceLowToHigh, categoryId = Model.categoryId })" class="dataLink @(Model.SortBy.HasValue ? Model.SortBy.Value == (int)SortByEnums.PriceLowToHigh ? "active" : string.Empty : string.Empty)">Price: low to high</a></li>
                            <li><a  data-href="@Url.Action("FilterProducts", "Shop", new { sortBy = (int)SortByEnums.PriceHighToLow, categoryId = Model.categoryId })" class="dataLink @(Model.SortBy.HasValue ? Model.SortBy.Value == (int)SortByEnums.PriceHighToLow ? "active" : string.Empty : string.Empty)">Price: high to low</a></li>
                        </ul>
                    </div><!-- /.widget-sort-by -->
                    <!-- Featured Categories -->
                    <div class="widget widget_tag">
                        <h5 class="widget-title">
                            Featured Categories
                        </h5>
                        <div class="tag-list">

                            @foreach (var item in Model.FeaturedCategories)
                            {
                                var active = Model.categoryId.HasValue && Model.categoryId == item.ID ? "active" : string.Empty;

                                <a data-href="@Url.Action("FilterProducts", "Shop", new { categoryId = item.ID, sortBy = Model.SortBy })" class="dataLink @active">@item.Name</a>

                            }


                        </div>
                    </div>

                    <!-- Filter Price Slider -->
                    <div class="widget widget-price">
                        <h5 class="widget-title">Filter by price</h5>
                        <div class="price-filter">
                            <div id="slide-range"></div>
                            <p class="amount">
                                Price: <input type="text" id="amount" disabled="">
                            </p>
                        </div>
                    </div>

                    <a href="@Url.Action("Index", "Shop")" class="btn btn-danger">Reset Filters</a> <!-- /.Reset Fitlers button -->
                </div><!-- /.sidebar -->
            </div><!-- /.col-md-3 -->
            <div class="col-md-9">

                <!-- Products List -->
                <div id="productsDiv">
                    @{
                        var filterProducts = new FilterProductsViewModel
                        {
                            Products = Model.Products,
                            Pager = Model.Pager,

                            SortBy = Model.SortBy.Value,
                            categoryId = Model.categoryId
                        };

                        Html.RenderPartial("FilterProducts", filterProducts);
                    }
                </div>

            </div><!-- /.col-md-9 -->
        </div><!-- /.row -->
    </div><!-- /.container -->
</section><!-- /.flat-row -->

<script>

    var CallTimeout;

         var priceSlider = $("#slide-range").slider({
            range: true,
            min: 0,
            max: @Model.MaximumPrice,
            values: [0, @Model.MaximumPrice], // initaly the values will be
            slide: function (event, ui) {

                var minPrice = ui.values[0]; // get the first element from 'values' array whhich is 0
                var maxPrice = ui.values[1]; // get the second element from 'values' array whhich is max price

                $("#amount").val("$" + minPrice + ".00" + " - " + "$" + maxPrice + ".00");

                clearTimeout(CallTimeout) // clear 'CallTimeout' var

                CallTimeout = setTimeout(GetPriceChange, 500); // call the 'getData' func after 0.5 sec everytime the slider is moved

        }
         })

     function GetPriceChange() {

        $.ajax({
            method: "GET",
            url: '@Url.Action("FilterProducts", "Shop")',
            data: {
                searchTerm: $("#searchTerm").val(),
                sortBy: $("#sortBy").val(),
                categoryId: $("#categoryId").val(),
                // get the prices from 'priceSlider' func
                minimumPrice: priceSlider.slider("values", 0),
                maximumPrice: priceSlider.slider("values", 1)
            }

             })
            .done(function (response) { // the response returns an html with values

               $("#productsDiv").html(response); // display the response in 'productsDiv' where we are calling the 'FilterProducts' partial view


                })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {

                alert("failed");

            });
    }



    // clicking on sortBy or featured categories
    $(".dataLink").click(function () {

        var url = $(this).attr("data-href"); // get their url value from attribute 'data-href'

        if (url != null && url != undefined) { // if url is not null and not undefined
            GetDataUrl(url); // call GetData func and pass url
        }

    })


    // get data from the url and pass the response to 'productsDiv'
    function GetDataUrl(Url) {
        $.ajax({
            method: "GET",
            url: Url,
             })
            .done(function (response) { // the response returns an html with values
               $("#productsDiv").html(response); // display the response in 'productsDiv' where we are calling the 'FilterProducts' partial view


                })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {

                alert("failed");

               });
             }

</script>