@model Ecommerce.Web.ViewModels.DetailsViewModel
@{
    ViewBag.Title = "Details";
}

<div class="title-section">
    <h2 class="title">@ViewBag.Title</h2>
</div>


@if (Model != null && Model.Order != null)
{
    var productsCount = 1;
    <section class="flat-row main-shop shop-slidebar">
        <div class="container">
            <div class="row">
                <div class="col-md-4 order-md-2 mb-4">
                    <h4 class="d-flex justify-content-between align-items-center mb-3">
                        <span class="text-muted">Your cart</span>
                    </h4>
                    <ul class="list-group mb-3">



                        @foreach (var item in Model.Order.OrderItem)
                        {

                            //var productQuantity = Model.CartProductIds.Where(x => x == item.ID).Count(); // get the count of where the ids in list 'CartProductIds' equal to the current product id

                            <li class="list-group-item d-flex justify-content-between lh-condensed">
                                <div>
                                    <h5 class="my-0">@productsCount - @item.Product.Name - Qty: @item.Quantity</h5>
                                    <small class="text-muted">@(@item.Product.Description.Length > 100 ? item.Product.Description.Substring(0, 99) : item.Product.Description)</small>
                                </div>
                                <h6 class="text-muted" style="margin-top:10px;">Unit: $@item.Product.Price - Total: @(item.Product.Price * item.Quantity) </h6>
                            </li>

                            productsCount++;

                        }



                        <li class="list-group-item d-flex justify-content-between">
                            <span>Total (USD)</span>
                            <!--multiply the price of each product by the count of its ids (quantity) -->
                            <strong>$@Model.Order.TotalAmount </strong>
                        </li>
                    </ul>
                </div>
                <div class="col-md-8 order-md-1">
                    <h4 class="mb-3">Billing Details</h4>
                    <form class="needs-validation" novalidate="">
                        <div class="row">
                            <div class="col-md-12 mb-3">
                                <label for="firstName">Name</label>
                                <input type="text" class="form-control" id="name" disabled value="@Model.OrderBy.Name" required="">
                                <div class="invalid-feedback">
                                    Valid first name is required.
                                </div>
                            </div>

                        </div>

                        <div class="mb-3">
                            <label for="email">Email <span class="text-muted"></span></label>
                            <input type="email" class="form-control" id="email" disabled value="@Model.OrderBy.Email">
                            <div class="invalid-feedback">
                                Please enter a valid email address for shipping updates.
                            </div>
                        </div>

                        <div class="mb-3">
                            <label for="address">Address</label>
                            <input type="text" class="form-control" id="address" disabled required="" value="@Model.OrderBy.Address">
                            <div class="invalid-feedback">
                                Please enter your shipping address.
                            </div>
                        </div>

                        <div class="mb-3">
                            <label>Status</label>
                            <select name="Status" id="changeStatus">

                                @foreach (var item in Model.availableStatuses)
                                {
                                    var isAvailableStatus = item == Model.Order.Status;

                                    <option @(isAvailableStatus ? "selected" : string.Empty)>@item </option>
                                }


                            </select>

                        </div>

                    </form>
                </div>
            </div>
        </div>
    </section>

    <script>

        $("#changeStatus").change(function (){

              $.ajax({

                method: "POST", // By default the method is always 'GET'
                url: '@Url.Action("ChangeStatus", "Order")',
                  data: {
                      status: $("#changeStatus").val(),
                      id: '@Model.Order.ID'
            }

        })
            .done(function (response) { // return json response

                if (response.success) {

                    Swal.fire({
                        title: 'Done',
                        text: "Your order Status Has Been Updated",
                        type: 'success',
                    }).then((result) => {
                        window.location = '@Url.Action("Index", "Order")'; 
                    });

                } else {

                    Swal.fire({
                        title: 'Error',
                        text: "Unable To Update Order Status!",
                        type: 'warning',
                    });

                }
            })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("Fail");
            });

        });

    </script>

}
else
{
    <div>
        No Product Details Available
    </div>
}


